/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  makeContractCreator,
  getOutput,
  getInput
} from "./utils/makeContractCreator";

import deFiModule from "./abi/deFiModule";

export const createDeFiModule = makeContractCreator(
  deFiModule as any[],
  {
    callMethods: {
      DISTRIBUTION_AGGREGATION_PERIOD: {
        output: getOutput("uinteger")
      },

      MODULE_ACCESS: {
        output: getOutput("string")
      },

      MODULE_CDAI: {
        output: getOutput("string")
      },

      MODULE_CURVE: {
        output: getOutput("string")
      },

      MODULE_DEFI: {
        output: getOutput("string")
      },

      MODULE_FUNDS: {
        output: getOutput("string")
      },

      MODULE_LIQUIDITY: {
        output: getOutput("string")
      },

      MODULE_LOAN: {
        output: getOutput("string")
      },

      MODULE_LOAN_LIMTS: {
        output: getOutput("string")
      },

      MODULE_LOAN_PROPOSALS: {
        output: getOutput("string")
      },

      MODULE_LTOKEN: {
        output: getOutput("string")
      },

      MODULE_PTOKEN: {
        output: getOutput("string")
      },

      balances: {
        inputs: [getInput("", "address")],
        output: getOutput(["uinteger", "uinteger", "uinteger"] as const)
      },

      distributions: {
        inputs: [getInput("", "uinteger")],
        output: getOutput(["uinteger", "uinteger", "uinteger"] as const)
      },

      getModuleAddress: {
        inputs: [getInput("module", "string")],
        output: getOutput("address")
      },

      isDefiOperator: {
        inputs: [getInput("account", "address")],
        output: getOutput("boolean")
      },

      isOwner: {
        output: getOutput("boolean")
      },

      nextDistributionTimestamp: {
        output: getOutput("uinteger")
      },

      owner: {
        output: getOutput("address")
      },

      pool: {
        output: getOutput("address")
      },

      availableInterest: {
        inputs: [getInput("account", "address")],
        output: getOutput("uinteger")
      },

      distributionsLength: {
        output: getOutput("uinteger")
      }
    },
    sendMethods: {
      addDefiOperator: {
        inputs: [getInput("account", "address")],
        output: getOutput("void")
      },

      renounceDefiOperator: {
        output: getOutput("void")
      },

      renounceOwnership: {
        output: getOutput("void")
      },

      setPool: {
        inputs: [getInput("_pool", "address")],
        output: getOutput("void")
      },

      transferOwnership: {
        inputs: [getInput("newOwner", "address")],
        output: getOutput("void")
      },

      initialize: {
        output: getOutput("void")
      },

      deposit: {
        inputs: [getInput("sender", "address"), getInput("amount", "uinteger")],
        output: getOutput("void")
      },

      withdraw: {
        inputs: [
          getInput("beneficiary", "address"),
          getInput("amount", "uinteger")
        ],
        output: getOutput("void")
      },

      withdrawInterest: {
        output: getOutput("void")
      },

      updatePTKBalance: {
        inputs: [
          getInput("account", "address"),
          getInput("ptkBalance", "uinteger")
        ],
        output: getOutput("void")
      },

      poolBalance: {
        output: getOutput("uinteger")
      },

      claimDistributions: {
        inputs: [getInput("account", "address")],
        output: getOutput("void")
      }
    },
    events: {
      DefiOperatorAdded: {
        inputs: [getInput("account", "address")]
      },

      DefiOperatorRemoved: {
        inputs: [getInput("account", "address")]
      },

      Deposit: {
        inputs: [getInput("amount", "uinteger")]
      },

      InvestmentDistributionCreated: {
        inputs: [
          getInput("amount", "uinteger"),
          getInput("currentBalance", "uinteger"),
          getInput("totalShares", "uinteger")
        ]
      },

      InvestmentDistributionsClaimed: {
        inputs: [
          getInput("account", "address"),
          getInput("shares", "uinteger"),
          getInput("amount", "uinteger"),
          getInput("fromDistribution", "uinteger"),
          getInput("toDistribution", "uinteger")
        ]
      },

      OwnershipTransferred: {
        inputs: [
          getInput("previousOwner", "address"),
          getInput("newOwner", "address")
        ]
      },

      PTKBalanceUpdated: {
        inputs: [getInput("account", "address"), getInput("amount", "uinteger")]
      },

      PoolAddressChanged: {
        inputs: [getInput("newPool", "address")]
      },

      Withdraw: {
        inputs: [getInput("amount", "uinteger")]
      },

      WithdrawInterest: {
        inputs: [getInput("account", "address"), getInput("amount", "uinteger")]
      }
    }
  } as const
);
