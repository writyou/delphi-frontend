/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  makeContractCreator,
  getOutput,
  getInput
} from "./utils/makeContractCreator";

import loanModule from "./abi/loanModule";

export const createLoanModule = makeContractCreator(
  loanModule as any[],
  {
    callMethods: {
      ANNUAL_SECONDS: {
        output: getOutput("uinteger")
      },

      DEBT_LOAD_MULTIPLIER: {
        output: getOutput("uinteger")
      },

      DEBT_REPAY_DEADLINE_PERIOD: {
        output: getOutput("uinteger")
      },

      INTEREST_MULTIPLIER: {
        output: getOutput("uinteger")
      },

      MODULE_LOAN_PROPOSALS: {
        output: getOutput("string")
      },

      activeDebts: {
        inputs: [getInput("", "address")],
        output: getOutput("uinteger")
      },

      debts: {
        inputs: [getInput("", "address"), getInput("", "uinteger")],
        output: getOutput([
          "uinteger",
          "uinteger",
          "uinteger",
          "uinteger",
          "boolean"
        ] as const)
      },

      getModuleAddress: {
        inputs: [getInput("module", "string")],
        output: getOutput("address")
      },

      isOwner: {
        output: getOutput("boolean")
      },

      owner: {
        output: getOutput("address")
      },

      pool: {
        output: getOutput("address")
      },

      isDebtDefaultTimeReached: {
        inputs: [getInput("borrower", "address"), getInput("debt", "uinteger")],
        output: getOutput("boolean")
      },

      calculatePledgeInfo: {
        inputs: [
          getInput("borrower", "address"),
          getInput("debt", "uinteger"),
          getInput("supporter", "address")
        ],
        output: getOutput([
          "uinteger",
          "uinteger",
          "uinteger",
          "uinteger"
        ] as const)
      },

      getDebtRequiredPayments: {
        inputs: [getInput("borrower", "address"), getInput("debt", "uinteger")],
        output: getOutput(["uinteger", "uinteger"] as const)
      },

      hasActiveDebts: {
        inputs: [getInput("borrower", "address")],
        output: getOutput("boolean")
      },

      getUnpaidInterest: {
        inputs: [getInput("borrower", "address")],
        output: getOutput(["uinteger", "uinteger"] as const)
      },

      totalLDebts: {
        output: getOutput("uinteger")
      }
    },
    sendMethods: {
      renounceOwnership: {
        output: getOutput("void")
      },

      setPool: {
        inputs: [getInput("_pool", "address")],
        output: getOutput("void")
      },

      transferOwnership: {
        inputs: [getInput("newOwner", "address")],
        output: getOutput("void")
      },

      initialize: {
        output: getOutput("void")
      },

      createDebt: {
        inputs: [
          getInput("borrower", "address"),
          getInput("proposal", "uinteger"),
          getInput("lAmount", "uinteger")
        ],
        output: getOutput("uinteger")
      },

      repay: {
        inputs: [getInput("debt", "uinteger"), getInput("lAmount", "uinteger")],
        output: getOutput("void")
      },

      repayPTK: {
        inputs: [
          getInput("debt", "uinteger"),
          getInput("pAmount", "uinteger"),
          getInput("lAmountMin", "uinteger")
        ],
        output: getOutput("void")
      },

      repayAllInterest: {
        inputs: [getInput("borrower", "address")],
        output: getOutput("void")
      },

      executeDebtDefault: {
        inputs: [getInput("borrower", "address"), getInput("debt", "uinteger")],
        output: getOutput("void")
      },

      withdrawUnlockedPledge: {
        inputs: [getInput("borrower", "address"), getInput("debt", "uinteger")],
        output: getOutput("void")
      },

      __changeDebtLastPaymentDate: {
        inputs: [
          getInput("borrower", "address"),
          getInput("debt", "uinteger"),
          getInput("newDate", "uinteger")
        ],
        output: getOutput("void")
      },

      calculateInterestPayment: {
        inputs: [
          getInput("debtLAmount", "uinteger"),
          getInput("interest", "uinteger"),
          getInput("prevPayment", "uinteger"),
          getInput("currentPayment", "uinteger")
        ],
        output: getOutput("uinteger")
      }
    },
    events: {
      DebtDefaultExecuted: {
        inputs: [
          getInput("borrower", "address"),
          getInput("debt", "uinteger"),
          getInput("pBurned", "uinteger")
        ]
      },

      OwnershipTransferred: {
        inputs: [
          getInput("previousOwner", "address"),
          getInput("newOwner", "address")
        ]
      },

      PoolAddressChanged: {
        inputs: [getInput("newPool", "address")]
      },

      Repay: {
        inputs: [
          getInput("sender", "address"),
          getInput("debt", "uinteger"),
          getInput("lDebtLeft", "uinteger"),
          getInput("lFullPaymentAmount", "uinteger"),
          getInput("lInterestPaid", "uinteger"),
          getInput("pInterestPaid", "uinteger"),
          getInput("newlastPayment", "uinteger")
        ]
      },

      UnlockedPledgeWithdraw: {
        inputs: [
          getInput("sender", "address"),
          getInput("borrower", "address"),
          getInput("proposal", "uinteger"),
          getInput("debt", "uinteger"),
          getInput("pAmount", "uinteger")
        ]
      }
    }
  } as const
);
