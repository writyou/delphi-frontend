/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  makeContractCreator,
  getOutput,
  getInput
} from "./utils/makeContractCreator";

import liquidityModule from "./abi/liquidityModule";

export const createLiquidityModule = makeContractCreator(
  liquidityModule as any[],
  {
    callMethods: {
      MODULE_ACCESS: {
        output: getOutput("string")
      },

      MODULE_CDAI: {
        output: getOutput("string")
      },

      MODULE_CURVE: {
        output: getOutput("string")
      },

      MODULE_DEFI: {
        output: getOutput("string")
      },

      MODULE_FUNDS: {
        output: getOutput("string")
      },

      MODULE_LIQUIDITY: {
        output: getOutput("string")
      },

      MODULE_LOAN: {
        output: getOutput("string")
      },

      MODULE_LOAN_LIMTS: {
        output: getOutput("string")
      },

      MODULE_LOAN_PROPOSALS: {
        output: getOutput("string")
      },

      MODULE_LTOKEN: {
        output: getOutput("string")
      },

      MODULE_PTOKEN: {
        output: getOutput("string")
      },

      getModuleAddress: {
        inputs: [getInput("module", "string")],
        output: getOutput("address")
      },

      isOwner: {
        output: getOutput("boolean")
      },

      limits: {
        output: getOutput(["uinteger", "uinteger"] as const)
      },

      owner: {
        output: getOutput("address")
      },

      pool: {
        output: getOutput("address")
      }
    },
    sendMethods: {
      renounceOwnership: {
        output: getOutput("void")
      },

      setPool: {
        inputs: [getInput("_pool", "address")],
        output: getOutput("void")
      },

      transferOwnership: {
        inputs: [getInput("newOwner", "address")],
        output: getOutput("void")
      },

      initialize: {
        output: getOutput("void")
      },

      deposit: {
        inputs: [
          getInput("lAmount", "uinteger"),
          getInput("pAmountMin", "uinteger")
        ],
        output: getOutput("void")
      },

      withdraw: {
        inputs: [
          getInput("pAmount", "uinteger"),
          getInput("lAmountMin", "uinteger")
        ],
        output: getOutput("void")
      },

      withdrawForRepay: {
        inputs: [
          getInput("borrower", "address"),
          getInput("pAmount", "uinteger")
        ],
        output: getOutput("void")
      },

      setLimits: {
        inputs: [
          getInput("lDepositMin", "uinteger"),
          getInput("pWithdrawMin", "uinteger")
        ],
        output: getOutput("void")
      }
    },
    events: {
      Deposit: {
        inputs: [
          getInput("sender", "address"),
          getInput("lAmount", "uinteger"),
          getInput("pAmount", "uinteger")
        ]
      },

      OwnershipTransferred: {
        inputs: [
          getInput("previousOwner", "address"),
          getInput("newOwner", "address")
        ]
      },

      PoolAddressChanged: {
        inputs: [getInput("newPool", "address")]
      },

      Withdraw: {
        inputs: [
          getInput("sender", "address"),
          getInput("lAmountTotal", "uinteger"),
          getInput("lAmountUser", "uinteger"),
          getInput("pAmount", "uinteger")
        ]
      }
    }
  } as const
);
