/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  makeContractCreator,
  getOutput,
  getInput
} from "./utils/makeContractCreator";

import loanLimitsModule from "./abi/loanLimitsModule";

export const createLoanLimitsModule = makeContractCreator(
  loanLimitsModule as any[],
  {
    callMethods: {
      DEBT_LOAD_MULTIPLIER: {
        output: getOutput("uinteger")
      },

      INTEREST_MULTIPLIER: {
        output: getOutput("uinteger")
      },

      MODULE_ACCESS: {
        output: getOutput("string")
      },

      MODULE_CDAI: {
        output: getOutput("string")
      },

      MODULE_CURVE: {
        output: getOutput("string")
      },

      MODULE_DEFI: {
        output: getOutput("string")
      },

      MODULE_FUNDS: {
        output: getOutput("string")
      },

      MODULE_LIQUIDITY: {
        output: getOutput("string")
      },

      MODULE_LOAN: {
        output: getOutput("string")
      },

      MODULE_LOAN_LIMTS: {
        output: getOutput("string")
      },

      MODULE_LOAN_PROPOSALS: {
        output: getOutput("string")
      },

      MODULE_LTOKEN: {
        output: getOutput("string")
      },

      MODULE_PTOKEN: {
        output: getOutput("string")
      },

      PLEDGE_PERCENT_MULTIPLIER: {
        output: getOutput("uinteger")
      },

      getModuleAddress: {
        inputs: [getInput("module", "string")],
        output: getOutput("address")
      },

      isOwner: {
        output: getOutput("boolean")
      },

      owner: {
        output: getOutput("address")
      },

      pool: {
        output: getOutput("address")
      },

      get: {
        inputs: [getInput("limit", "uinteger")],
        output: getOutput("uinteger")
      },

      lDebtAmountMin: {
        output: getOutput("uinteger")
      },

      debtInterestMin: {
        output: getOutput("uinteger")
      },

      pledgePercentMin: {
        output: getOutput("uinteger")
      },

      lMinPledgeMax: {
        output: getOutput("uinteger")
      },

      debtLoadMax: {
        output: getOutput("uinteger")
      },

      maxOpenProposalsPerUser: {
        output: getOutput("uinteger")
      },

      minCancelProposalTimeout: {
        output: getOutput("uinteger")
      },

      allLimits: {
        output: getOutput([
          "uinteger",
          "uinteger",
          "uinteger",
          "uinteger",
          "uinteger",
          "uinteger",
          "uinteger"
        ] as const)
      }
    },
    sendMethods: {
      renounceOwnership: {
        output: getOutput("void")
      },

      setPool: {
        inputs: [getInput("_pool", "address")],
        output: getOutput("void")
      },

      transferOwnership: {
        inputs: [getInput("newOwner", "address")],
        output: getOutput("void")
      },

      initialize: {
        inputs: [getInput("_pool", "address")],
        output: getOutput("void")
      },

      set: {
        inputs: [getInput("limit", "uinteger"), getInput("value", "uinteger")],
        output: getOutput("void")
      }
    },
    events: {
      LimitChanged: {
        inputs: [
          getInput("limitType", "uinteger"),
          getInput("oldValue", "uinteger"),
          getInput("newValue", "uinteger")
        ]
      },

      OwnershipTransferred: {
        inputs: [
          getInput("previousOwner", "address"),
          getInput("newOwner", "address")
        ]
      },

      PoolAddressChanged: {
        inputs: [getInput("newPool", "address")]
      }
    }
  } as const
);
